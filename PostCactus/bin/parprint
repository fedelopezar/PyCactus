#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import shutil
import sys
from optparse import OptionParser
from postcactus import cactus_parfile as cpar

     
def main(pf1, guess):
  p1    = cpar.load_parfile(pf1, guess_types=guess)
  print p1
#

usage   = "usage: %prog [-g] <parfile>"

desc="""This parses Cactus parameter files and prints it in a canonical 
format. Note this tool does not know the variable type, and hence cannot 
know if "yes" is a bool or a string. With the -g option, it tries to 
guess, although this is error prone. For a few variables the scripts
knows they are lists of grid functions. It parses them, and prints them 
as unique sorted list, removing duplicates. If some content of a 
parameter file could not be parsed, it is displayed with a warning 
message. This indicates either a corrupt parfile or, equally likely, 
a bug in this script. Please check and report.
"""

parser  = OptionParser(usage, description=desc)
parser.add_option('-g', action='store_true', dest='guess', default=False,\
      help="Guess parameter types and compare values instead of their text representation.")
      
(opt, args) = parser.parse_args()

if (len(args)!=1):
  parser.error('You have to specify one par file.')
#
main(args[0], opt.guess)

  
